swagger: '2.0'
######################################################
# Prolog
######################################################
info:
  version: 1.0.0
  title: "WSO2 Identity Server UMA 2.0 Permission Endpoint"
  description: >
    This document specifies an **UMA 2.0 Permission Endpoint** for WSO2 **Identity Server** .

    It is written with [swagger 2](http://swagger.io/).

  contact:
    name: WSO2
    url: 'http://wso2.com/identity-and-access-management'
    email: architecture@wso2.org
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

######################################################
# The fixed parts of the URLs of the API
######################################################

# The schemes supported by the API
schemes:
  - https

host: localhost

# The domain of the API.
# This is configured by the customer during deployment.
# The given host is just an example.
# host: apis.is.com

# The base path of the API.
# Will be prefixed to all paths.
# if the tenant domain is carbon.super basepath can be /api/identity/consent-mgt/v1.0 like this too.
basePath: /api/identity/oauth2/uma/permission/v1.0

# The following media types can be passed as input in message bodies of the API.
# The actual media type must be specified in the Content-Type header field of the request.
# The default is json, i.e. the Content-Type header is not needed to
# be set, but supporting it serves extensibility.
consumes:
  - application/json

# The following media types may be passed as output in message bodies of the API.
# The media type(s) consumable by the requestor is specified in the Accept header field
# of the corresponding request.
# The actual media type returned will be specfied in the Content-Type header field
# of the of the response.
# The default of the Accept header is json, i.e. there is not needed to
# set the value, but supporting it serves extensibility.
produces:
  - application/json
paths:
  /permission:
    post:
      operationId: requestPermission
      summary: Permission Endpoint.
      description: >
        This API is used by Resource Server to request permissions on Client's
        Behalf from Authorization Server.
      tags:
        - Requesting permissions
      parameters:
        - in: body
          name: requestedPermission
          description: The requested permissions.
          schema:
            $ref: '#/definitions/ResourceModel'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/PermissionTicketResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  PermissionTicketResponse:
    properties:
      ticket:
        type: string
        description: The created permission ticket.
        example: 016f84e8-f9b9-11e0-bd6f-0021cc6004de
    required:
      - ticket
  ErrorResponse:
    properties:
      error:
        type: string
        description: A single error code.
        example: invalid_resource_id
      error_description:
        type: string
        description: Additional information about the error.
        example: Permission request failed with bad resource ID.
    required:
      - error
  ResourceModel:
    type: array
    items:
      type: object
      required:
        - resource_id
        - resource_scopes
      properties:
        resource_id:
          type: string
          example: 7b727369647d
          description: >
            The identifier for a resource to which the resource server is
            requesting permission on behalf of the client. The identifier MUST
            correspond to a resource that was previously registered.
        resource_scopes:
          type: array
          example:
            - view
            - 'http://photoz.example.com/dev/actions/print'
          description: >
            An array referencing zero or more identifiers of scopes to which the
            resource server is requesting access for this resource on behalf of
            the client. Each scope identifier MUST correspond to a scope that
            was previously registered by this resource server for the referenced
            resource.
          items:
            type: string
